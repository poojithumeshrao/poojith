k = 2
count = 0
root = None

import numpy as np
import pdb

class node:
    def __init__(k,d):
        points = d
        order = k
        left = None
        right = None

def search(nod,point):
    nn = nod
    pdb.set_trace()
    while (True):
        if nn == None:
            print 'error'
        elif nn.points[nn.order] >= point[nn.order]:
            if nn.left == None:
                temp = nn
                lorr = 0
                break
            else :
                nn = nn.left
        else:
            if nn.right == None:
                temp = nn
                lorr = 1
                break
            else :
                nn = nn.right
    return temp,lorr

def insert(temp,lorr,point):
    pdb.set_trace()
    t = node((temp.order+1)%k,point)
    if lorr == 0:
        temp.left = t
    else:
        temp.right = t
data = np.random.randint(low = -50,high=50,size=(10,k))

for cord in data:
    pdb.set_trace()
    if count == 0:
        root = node(0,cord)
    else :
        insert(search(root,cord),cord)
