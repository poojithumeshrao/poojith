import random
import pdb
import math
import cPickle
import numpy
import matplotlib.pyplot as plt
import copy
from collections import Counter
from nltk.stem.porter import *
import nltk



from nltk.corpus import stopwords
import nltk

with open('/home/poojith/poojith/programs/bbcsport/wtv') as text:
    strg = text.read().replace('\n',' ').lower()

print strg

strg = nltk.word_tokenize(strg.decode('utf-8')
print strg
#strg = [i.decode('utf-8') for i in strg]

#print len(strg)

strg = [x for x in strg if x not in stopwords.words('english') and not x.isdigit() and x.isalpha()]

count = nltk.FreqDist(strg).most_common(100)

cnt = [x for (x,y) in count]

strset = set(strg)
strset = list(strset)


strset.sort()

#print strset
print len(strset)
inp1 = []
op1 = []
for i in range(2,len(strg)-2,1):
    t1 = numpy.zeros((4,len(strset)))
    t2 = numpy.zeros((4,len(strset)))
    for j in range(4):
        t1[j][strset.index(strg[i])] = 1
        for k in range(-2,2,1):
            if k !=0:
                t2[j][strset.index(strg[i+k])] = 1
    inp1.extend(t1)
    op1.extend(t2)
inp1 = numpy.asarray(inp1)
op1 = numpy.asarray(op1)
op = []
inp = []
batch = 00
pdb.set_trace()
ct = 0
while True:
    del(inp)
    del(op)
    inp = []
    op = []
    #print len(inp1[0])
    if batch+100 < len(inp1[0]):
        for i in range(batch,batch+100,1):
            inp.append(inp1[i])
            op.append(op1[i])
        batch += 100
    else :
        #pdb.set_trace()
        for i in range(batch,len(inp1[0]),1):
            inp.append(inp1[i])
            op.append(op1[i])
        for j in range(i,batch+99,1):
            inp.append(inp1[i])
            op.append(op1[i])
        batch = 0
    inp = numpy.asarray(inp)
    op = numpy.asarray(op)
    e = 0
    #------------------------
    if ct % 22 == 0:
        inp = inp.tolist()
        op = op.tolist()
        #pdb.set_trace()
        print batch
        print e
        print strset[inp[10].index(1)]
        print strset[op[10].index(1)]
        print '--------'
        inp = numpy.asarray(inp)
        op = numpy.asarray(op)
    ct += 1
